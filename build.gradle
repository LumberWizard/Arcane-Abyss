plugins {
	id 'fabric-loom' version '0.5-SNAPSHOT'
	id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

repositories {
	maven { url 'https://maven.blamejared.com' }
	maven { url 'https://jitpack.io' }
	maven { url 'https://maven.fabricmc.net' }
	maven { url 'http://tehnut.info/maven' }
	maven { url 'https://dl.bintray.com/ladysnake/libs' }
	maven { url = "https://maven.theillusivec4.top" }
}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"

	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
	modImplementation "vazkii.patchouli:Patchouli:${project.patchouli_version}"
	modImplementation "top.theillusivec4.caelus:caelus-fabric:${project.caelus_version}"
	modImplementation "io.github.ladysnake:Satin:${project.satin_version}"

	modApi("me.shedaniel.cloth:config-2:${project.cloth_config_version}") {
		exclude(group: "net.fabricmc.fabric-api")
	}
	modApi("me.sargunvohra.mcmods:autoconfig1u:${project.auto_config_version}") {
		exclude(group: "net.fabricmc.fabric-api")
	}

	modCompileOnly "me.shedaniel:RoughlyEnoughItems-api:${project.rei_version}"
	modCompileOnly "vazkii.patchouli:Patchouli:${project.patchouli_version}:api"

	modRuntime "me.shedaniel:RoughlyEnoughItems:${project.rei_version}"
	modRuntime "io.github.prospector:modmenu:${project.modmenu_version}"

	include "top.theillusivec4.caelus:caelus-fabric:${project.caelus_version}"
	include "io.github.ladysnake:Satin:${project.satin_version}"
	include "me.shedaniel.cloth:config-2:${project.cloth_config_version}"
	include "me.sargunvohra.mcmods:autoconfig1u:${project.auto_config_version}"
}

processResources {
	inputs.property "version", project.version

	from(sourceSets.main.resources.srcDirs) {
		include "fabric.mod.json"
		expand "version": project.version
	}

	from(sourceSets.main.resources.srcDirs) {
		exclude "fabric.mod.json"
	}
}

tasks.withType(JavaCompile) {
	options.encoding = "UTF-8"
}

task sourcesJar(type: Jar, dependsOn: classes) {
	classifier = "sources"
	from sourceSets.main.allSource
}

jar {
	from "LICENSE"
}

publishing {
	publications {
		mavenJava(MavenPublication) {
			artifact(remapJar) {
				builtBy remapJar
			}
			artifact(sourcesJar) {
				builtBy remapSourcesJar
			}
		}
	}

	repositories {
		// mavenLocal()
	}
}
